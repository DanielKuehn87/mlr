% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RLearner_classif_RRF.R, R/RLearner_classif_boosting.R, R/RLearner_classif_cforest.R, R/RLearner_classif_gbm.R, R/RLearner_classif_randomForestSRC.R, R/RLearner_classif_ranger.R, R/RLearner_classif_rpart.R, R/RLearner_classif_xgboost.R, R/RLearner_regr_RRF.R, R/RLearner_regr_cforest.R, R/RLearner_regr_gbm.R, R/RLearner_regr_randomForest.R, R/RLearner_regr_randomForestSRC.R, R/RLearner_regr_ranger.R, R/RLearner_regr_rpart.R, R/RLearner_regr_xgboost.R, R/RLearner_surv_cforest.R, R/RLearner_surv_randomForestSRC.R, R/RLearner_surv_ranger.R, R/RLearner_surv_rpart.R, R/getFeatureImportance.R
\name{getFeatureImportance.classif.RRF}
\alias{getFeatureImportance.classif.RRF}
\alias{getFeatureImportance.classif.boosting}
\alias{getFeatureImportance.classif.cforest}
\alias{getFeatureImportance.classif.gbm}
\alias{getFeatureImportance.classif.randomForestSRC}
\alias{getFeatureImportance.classif.ranger}
\alias{getFeatureImportance.classif.rpart}
\alias{getFeatureImportance.classif.xgboost}
\alias{getFeatureImportance.regr.RRF}
\alias{getFeatureImportance.regr.cforest}
\alias{getFeatureImportance.regr.gbm}
\alias{getFeatureImportance.regr.randomForest}
\alias{getFeatureImportance.regr.randomForestSRC}
\alias{getFeatureImportance.regr.ranger}
\alias{getFeatureImportance.regr.rpart}
\alias{getFeatureImportance.regr.xgboost}
\alias{getFeatureImportance.surv.cforest}
\alias{getFeatureImportance.surv.randomForestSRC}
\alias{getFeatureImportance.surv.ranger}
\alias{getFeatureImportance.surv.rpart}
\alias{getFeatureImportanceLearner}
\title{Calculates feature importance values for a given learner.}
\usage{
getFeatureImportance.classif.RRF(.learner, .model, ...)

getFeatureImportance.classif.boosting(.learner, .model, ...)

getFeatureImportance.classif.cforest(.learner, .model, auc = FALSE, ...)

getFeatureImportance.classif.gbm(.learner, .model, n.trees, ...)

getFeatureImportance.classif.randomForestSRC(.learner, .model, ...)

getFeatureImportance.classif.ranger(.learner, .model, ...)

getFeatureImportance.classif.rpart(.learner, .model, ...)

getFeatureImportance.classif.xgboost(.learner, .model, ...)

getFeatureImportance.regr.RRF(.learner, .model, ...)

getFeatureImportance.regr.cforest(.learner, .model, ...)

getFeatureImportance.regr.gbm(.learner, .model, n.trees, ...)

getFeatureImportance.regr.randomForest(.learner, .model, ...)

getFeatureImportance.regr.randomForestSRC(.learner, .model, ...)

getFeatureImportance.regr.ranger(.learner, .model, ...)

getFeatureImportance.regr.rpart(.learner, .model, ...)

getFeatureImportance.regr.xgboost(.learner, .model, ...)

getFeatureImportance.surv.cforest(.learner, .model, ...)

getFeatureImportance.surv.randomForestSRC(.learner, .model, ...)

getFeatureImportance.surv.ranger(.learner, .model, ...)

getFeatureImportance.surv.rpart(.learner, .model, ...)

getFeatureImportanceLearner(.learner, .model, ...)
}
\arguments{
\item{.learner}{[\code{\link{Learner}} | \code{character(1)}]\cr
The learner.
If you pass a string the learner will be created via \code{\link{makeLearner}}.}

\item{.model}{[\code{\link{WrappedModel}}]\cr
The model.}

\item{...}{[any]\cr
Additional parameters, which are passed to the underlying importance value 
generating function.}

\item{auc}{[logical(1)]\cr Only for binary classification with cforest. Should the auc based importance be calculated.}

\item{n.trees}{[integer(1)]\cr Only for gbm. For how many trees should the importance be calculated.
If missing the number of trees used to fit the model is used.}
}
\description{
For details see \code{\link{getFeatureImportance}}.
}

